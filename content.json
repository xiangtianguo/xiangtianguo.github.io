{"meta":{"title":"小人物的博客","subtitle":"绕梁余音出玉萧,孤身江湖任逍遥。欲寄愁思向何处,独影随行一只猫。","description":"绕梁余音出玉萧,孤身江湖任逍遥。欲寄愁思向何处,独影随行一只猫。","author":"小人物","url":"http://blog.cxuyuan.com"},"pages":[],"posts":[{"title":"Solidity 智能合约示例","slug":"Solidity-智能合约示例","date":"2018-06-08T10:01:43.000Z","updated":"2018-06-08T10:09:54.105Z","comments":true,"path":"2018/06/08/Solidity-智能合约示例/","link":"","permalink":"http://blog.cxuyuan.com/2018/06/08/Solidity-智能合约示例/","excerpt":"Examples One :1234567891011121314151617181920212223contract MetaCoin &#123; mapping (address =&gt; uint) balances; event Transfer(address indexed _from, address indexed _to, uint256 _value); function MetaCoin() &#123; balances[tx.origin] = 10000; &#125; function sendCoin(address receiver, uint amount) returns(bool sufficient) &#123; if (balances[msg.sender] &lt; amount) return false; balances[msg.sender] -= amount; balances[receiver] += amount; Transfer(msg.sender, receiver, amount); return true; &#125; function getBalance(address addr) returns(uint) &#123; return balances[addr]; &#125;&#125;","text":"Examples One :1234567891011121314151617181920212223contract MetaCoin &#123; mapping (address =&gt; uint) balances; event Transfer(address indexed _from, address indexed _to, uint256 _value); function MetaCoin() &#123; balances[tx.origin] = 10000; &#125; function sendCoin(address receiver, uint amount) returns(bool sufficient) &#123; if (balances[msg.sender] &lt; amount) return false; balances[msg.sender] -= amount; balances[receiver] += amount; Transfer(msg.sender, receiver, amount); return true; &#125; function getBalance(address addr) returns(uint) &#123; return balances[addr]; &#125;&#125; Examples Two :123456789101112131415161718192021pragma solidity ^0.4.17;contract Adoption &#123; address[16] public adopters; // 保存领养者的地址 // 领养宠物 function adopt(uint petId) public returns (uint) &#123; require(petId &gt;= 0 &amp;&amp; petId &lt;= 15); // 确保id在数组长度内 adopters[petId] = msg.sender; // 保存调用这地址 return petId; &#125; // 返回领养者 function getAdopters() public view returns (address[16]) &#123; return adopters; &#125;&#125;","categories":[],"tags":[{"name":"Solidity","slug":"Solidity","permalink":"http://blog.cxuyuan.com/tags/Solidity/"}]},{"title":"以太坊常用操作命令","slug":"以太坊常用操作命令","date":"2018-06-08T04:00:22.000Z","updated":"2018-06-08T05:56:41.051Z","comments":true,"path":"2018/06/08/以太坊常用操作命令/","link":"","permalink":"http://blog.cxuyuan.com/2018/06/08/以太坊常用操作命令/","excerpt":"以太坊的 javascript 内置对象 eth：操作区块链 net：查看p2p网络状态 admin：管理节点 miner：启动/停止等挖矿操作 personal：管理账户 txpool：查看交易内存池 web3：包含以上对象，也包含一些单位算法","text":"以太坊的 javascript 内置对象 eth：操作区块链 net：查看p2p网络状态 admin：管理节点 miner：启动/停止等挖矿操作 personal：管理账户 txpool：查看交易内存池 web3：包含以上对象，也包含一些单位算法 启动私链 geth --identity \"qtlnodetest\" --targetgaslimit 4294967295 --gasprice 1000000000 --rpc --rpcport \"8545\" --rpcaddr 0.0.0.0 --rpccorsdomain \"*\" --datadir data0 --port \"30303\" console 2>>log #### 创建新账号 personal.newAccount() 解锁账号 personal.unlockAccount(eth.accounts[0]) ersonal.unlockAccount(eth.accounts[0],\"123456\",1000000000) 查看账户列表 eth.accounts 查询账户余额 eth.getBalance(eth.accounts[0]) 区块总数 eth.blockNumber 开始/停止挖矿 miner.start() //开始挖矿 参数是开启挖矿计算的线程数。第一次会创建 DAG ，这里会花费一些时间，关于 DAG， 详情见底部参考。 出现 true 说明挖矿完毕。挖一个区块， 获得 5 个以太币作为奖励。 账户里的显示的单位是 wei， 并不是以太币。 admin.sleepBlocks(1) //挖到第几个区块就停止 miner.stop() //停止挖矿 eth.mining //查看是否正在挖矿 查看交易池状态 txpool.status 单位转换 web3.fromWei(eth.getBalance(eth.accounts[0]), 'ether') 添加p2p节点 admin.addPeer(\"enode://f2c91ee24585e592fa5adc1940360b90e1a10969c 5955fc51807bb24ab5e34265994c36f3af51a982a3d6d66f73b8cbba99ad38739545812724d60bf5c58e684@39.104.104.233:30303”)","categories":[],"tags":[{"name":"以太坊","slug":"以太坊","permalink":"http://blog.cxuyuan.com/tags/以太坊/"}]},{"title":"golang","slug":"golang","date":"2018-06-07T16:30:47.000Z","updated":"2018-06-07T17:56:43.373Z","comments":true,"path":"2018/06/08/golang/","link":"","permalink":"http://blog.cxuyuan.com/2018/06/08/golang/","excerpt":"","text":"变量 变量的声明 var xx type 或者 var (xx type xxx type)","categories":[],"tags":[{"name":"golang","slug":"golang","permalink":"http://blog.cxuyuan.com/tags/golang/"}]}]}